---
#
# Tasks for role registrar
#
# Overview:
#
#
# Dependencies:
#
#
# Example play:
#
#

- name: add gunicorn configuration file
  template:
    src: edx/app/registrar/registrar_gunicorn.py.j2
    dest: "{{ '{{' }} registrar_home }}/registrar_gunicorn.py"
  sudo_user: "{{ '{{' }} registrar_user }}"
  tags:
    - install
    - install:configuration

- name: build virtualenv
  command: "virtualenv {{ '{{' }} registrar_venv_dir }}"
  args:
    creates: "{{ '{{' }} registrar_venv_dir }}/bin/pip"
  sudo_user: "{{ '{{' }} registrar_user }}"
  environment: "{{ '{{' }} registrar_environment }}"
  tags:
    - install
    - install:app-requirements

- name: install application requirements
  command: make requirements
  args:
    chdir: "{{ '{{' }} registrar_code_dir }}"
  sudo_user: "{{ '{{' }} registrar_user }}"
  environment: "{{ '{{' }} registrar_environment }}"
  tags:
    - install
    - install:app-requirements

- name: install development requirements
  command: make local-requirements
  args:
    chdir: "{{ '{{' }} registrar_code_dir }}"
  sudo_user: "{{ '{{' }} registrar_user }}"
  environment: "{{ '{{' }} registrar_environment }}"
  tags:
    - devstack
    - devstack:install

- name: migrate database
  command: make migrate
  args:
    chdir: "{{ '{{' }} registrar_code_dir }}"
  sudo_user: "{{ '{{' }} registrar_user }}"
  environment: "{{ '{{' }} registrar_migration_environment }}"
  when: migrate_db is defined and migrate_db|lower == "yes"
  run_once: yes
  tags:
    - migrate
    - migrate:db

- name: write out the supervisor wrapper
  template:
    src: "edx/app/registrar/registrar.sh.j2"
    dest: "{{ '{{' }} registrar_home }}/{{ '{{' }} registrar_service_name }}.sh"
    mode: 0650
    owner: "{{ '{{' }} supervisor_user }}"
    group: "{{ '{{' }} common_web_user }}"
  tags:
    - install
    - install:configuration

- name: write supervisord config
  template:
    src: "edx/app/supervisor/conf.d.available/registrar.conf.j2"
    dest: "{{ '{{' }} supervisor_available_dir }}/{{ '{{' }} registrar_service_name }}.conf"
    owner: "{{ '{{' }} supervisor_user }}"
    group: "{{ '{{' }} common_web_user }}"
    mode: 0644
  tags:
    - install
    - install:configuration

- name: write devstack script
  template:
    src: "edx/app/registrar/devstack.sh.j2"
    dest: "{{ '{{' }} registrar_home }}/devstack.sh"
    owner: "{{ '{{' }} supervisor_user }}"
    group: "{{ '{{' }} common_web_user }}"
    mode: 0744
  tags:
    - devstack
    - devstack:install

- name: setup the registrar env file
  template:
    src: "./{{ '{{' }} registrar_home }}/{{ '{{' }} registrar_service_name }}_env.j2"
    dest: "{{ '{{' }} registrar_home }}/registrar_env"
    owner: "{{ '{{' }} registrar_user }}"
    group: "{{ '{{' }} registrar_user }}"
    mode: 0644
  tags:
    - install
    - install:configuration

- name: enable supervisor script
  file:
    src: "{{ '{{' }} supervisor_available_dir }}/{{ '{{' }} registrar_service_name }}.conf"
    dest: "{{ '{{' }} supervisor_cfg_dir }}/{{ '{{' }} registrar_service_name }}.conf"
    state: link
    force: yes
  when: not disable_edx_services
  tags:
    - install
    - install:configuration

- name: update supervisor configuration
  command: "{{ '{{' }} supervisor_ctl }} -c {{ '{{' }} supervisor_cfg }} update"
  when: not disable_edx_services
  tags:
    - manage
    - manage:start

- name: create symlinks from the venv bin dir
  file:
    src: "{{ '{{' }} registrar_venv_dir }}/bin/{{ '{{' }} item }}"
    dest: "{{ '{{' }} COMMON_BIN_DIR }}/{{ '{{' }} item.split('.')[0] }}.registrar"
    state: link
  with_items:
    - python
    - pip
    - django-admin.py
  tags:
    - install
    - install:app-requirements

- name: create symlinks from the repo dir
  file:
    src: "{{ '{{' }} registrar_code_dir }}/{{ '{{' }} item }}"
    dest: "{{ '{{' }} COMMON_BIN_DIR }}/{{ '{{' }} item.split('.')[0] }}.registrar"
    state: link
  with_items:
    - manage.py
  tags:
    - install
    - install:app-requirements

- name: run collectstatic
  command: make static
  args:
    chdir: "{{ '{{' }} registrar_code_dir }}"
  sudo_user: "{{ '{{' }} registrar_user }}"
  environment: "{{ '{{' }} registrar_environment }}"
  tags:
    - assets
    - assets:gather

- name: restart the application
  supervisorctl:
    state: restarted
    supervisorctl_path: "{{ '{{' }} supervisor_ctl }}"
    config: "{{ '{{' }} supervisor_cfg }}"
    name: "{{ '{{' }} registrar_service_name }}"
  when: not disable_edx_services
  sudo_user: "{{ '{{' }} supervisor_service_user }}"
  tags:
    - manage
    - manage:start

- name: Copying nginx configs for registrar
  template:
    src: "edx/app/nginx/sites-available/registrar.j2"
    dest: "{{ '{{' }} nginx_sites_available_dir }}/registrar"
    owner: root
    group: "{{ '{{' }} common_web_user }}"
    mode: 0640
  notify: reload nginx
  tags:
    - install
    - install:vhosts

- name: Creating nginx config links for registrar
  file:
    src: "{{ '{{' }} nginx_sites_available_dir }}/registrar"
    dest: "{{ '{{' }} nginx_sites_enabled_dir }}/registrar"
    state: link
    owner: root
    group: root
  notify: reload nginx
  tags:
    - install
    - install:vhosts

